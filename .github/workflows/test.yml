name: 'Test'

# main 브랜치로 push 또는 pull request 발생 시 실행
on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
  pull_request:
    paths-ignore:
      - '*.md'

# 같은 브랜치에서 실행 중인 워크플로우가 있으면 중복 실행 방지
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  test:
    #  Ubuntu 최신 버전에서만 실행
    runs-on: 'ubuntu-latest'

    permissions:
      contents: write
    steps:
      # 저장소 체크아웃
      - uses: actions/checkout@v4

      # Node.js 환경 설정 (.nvmrc 사용)
      - uses: peaceiris/workflows/setup-node@v0.20.1
        with:
          node-version-file: ".nvmrc"

      # CI 환경에서 Node.js 버전 확인
      - name: Dump version
        run: |
          node -v
          npm --version
          git --version

      # 패키지 설치 (npm ci는 package-lock.json을 기반으로 설치)
      - run: npm ci --ignore-scripts

      # 보안 검사 (Ubuntu 22.04에서만 실행)
      - name: npm audit
        if: startsWith(matrix.os, 'ubuntu-22.04')
        run: |
          npm audit > ./audit.log || true
          if ! [ "$(cat ./audit.log | wc -l)" = 1 ]; then
            echo "::warning::$(cat ./audit.log)"
          fi
          rm ./audit.log

      # 코드 스타일 검사 (Prettier)
      - name: Run prettier
        if: startsWith(matrix.os, 'ubuntu-22.04')
        run: npm run format:check

      # 린트 검사 (ESLint)
      - name: Run eslint
        if: startsWith(matrix.os, 'ubuntu-22.04')
        run: npm run lint

      # 테스트 실행
      - run: vitest

      # 테스트 커버리지 업로드
      - name: Upload test coverage as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}
          path: coverage

      # 코드 커버리지 분석 (Codecov 사용)
      - uses: codecov/codecov-action@v4

      # 빌드 실행
      - name: Run ncc
        run: npm run build

      # Lint-Staged & Husky 제거 (main 브랜치에서만 실행)
      - name: Remove lint-staged husky
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          npm uninstall lint-staged husky
          git checkout package-lock.json package.json

      # GitHub Pages 배포 (OS별 배포 제거, 하나의 배포로 통합)
#      - name: Deploy to GitHub Pages
#        if: github.ref == 'refs/heads/main' && github.event.repository.fork == false
#        uses: peaceiris/actions-gh-pages@v4
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_branch: gh-pages
#          publish_dir: ./test_projects/mdbook/book
#          allow_empty_commit: true
#          user_name: 'github-actions[bot]'
#          user_email: 'github-actions[bot]@users.noreply.github.com'
#          cname: 'actions-gh-pages.peaceiris.com'